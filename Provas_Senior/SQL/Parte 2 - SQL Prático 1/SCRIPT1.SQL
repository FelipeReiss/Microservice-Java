/*
Parte 2 – SQL Prático1
Exercício 1.

Com a estrutura de dados abaixo e os exemplos de dados crie:
a)	Uma consulta onde mostre os 10 primeiros produtos.
b)	Uma consulta onde mostre os produtos apenas com embalagens ativas.
c)	Uma consulta que traga quantidade de embalagens de cada produto.
d)	Insira um novo produto e uma nova embalagem para esse produto de acordo com a estrutura dados.
e)	Altere a altura para 250, largura para 120 e comprimento para 150 das embalagens dos produtos cujo FATORCONVERSAO seja igual a 1.
*/

-- -----------------------------------------------------
-- CREATING DB
-- -----------------------------------------------------

DROP DATABASE IF EXISTS Parte2ProvaSQL; -- OBS: LINHA ADICIONADA APENAS PARA MANTER A CONSISTÊNCIA DOS DADOS NESTE EXERCÍCIO, ENTENDO O RISCO DE SE DELETAR UM DB EM PRODUÇÃO
CREATE DATABASE IF NOT EXISTS Parte2ProvaSQL;
USE Parte2ProvaSQL;

-- -----------------------------------------------------
-- CREATING TABLE PRODUTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS PRODUTO (
  IDPRODUTO INT NOT NULL AUTO_INCREMENT,
  CODIGOINTERNO VARCHAR(60) NULL,
  DESCR VARCHAR(120) NULL,
  ATIVO VARCHAR(1) NULL,
  PRIMARY KEY (IDPRODUTO)
);

-- -----------------------------------------------------
-- CREATING TABLE EMBALAGEM
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS EMBALAGEM (
  BARRA VARCHAR(32) NOT NULL,
  DESCR VARCHAR(80) NULL,
  FATORCONVERSAO FLOAT NULL,
  ALTURA FLOAT NULL,
  LARGURA FLOAT NULL,
  COMPRIMENTO FLOAT NULL,
  ATIVO VARCHAR(1) NULL,
  IDPRODUTO INT NOT NULL,
  PRIMARY KEY (BARRA, IDPRODUTO),
  INDEX fk_EMBALAGEM_PRODUTO_idx (IDPRODUTO ASC),
  CONSTRAINT fk_EMBALAGEM_PRODUTO
    FOREIGN KEY (IDPRODUTO)
    REFERENCES Parte2ProvaSQL.PRODUTO (IDPRODUTO)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- INSERTS (DADOS FORNECIDOS PELO EXERCÍCIO)
-- -----------------------------------------------------
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (12,"000001","OLEO DE SOJA","S");
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (13,"000002","OLEO DE GIRASSOL","S");
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (57,"000003","TELEFONE SEM FIO","S");
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (382,"000004","MOUSE MICROSOFT","S");
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (435,"000005","JOHNNIE WALKER BLUE LABEL","S");

INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (12,"7891000315507","OLEO DE SOJA LT",1,200,100,100,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (12,"7891000315508","OLEO DE SOJA CX COM 10",10,250,400,400,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (13,"7891000415510","OLEO DE GIRASSOL LT",1,200,100,100,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (13,"7891000415511","OLEO DE GIRASSOL CX COM 10",10,250,400,400,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (57,"7891000415515","TELEFONE SEM FIO",1,170,180,190,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (382,"7891000715501","MOUSE MICROSOFT",1,60,60,110,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (382,"7891000715502","MOUSE MICROSOFT CX COM 10",10,180,200,200,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (382,"7891000715503","MOUSE MICROSOFT CX COM 50",50,400,450,450,"N");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (435,"7891000745678","JOHNNIE WALKER BLUE LABEL",1,300,150,150,"S");
INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (435,"7891000745679","JOHNNIE WALKER BLUE LABEL CX COM 12",12,350,450,450,"S");

-- -----------------------------------------------------
-- RESPOSTAS DOS EXERCÍCIOS
-- -----------------------------------------------------
-- a)	Uma consulta onde mostre os 10 primeiros produtos.
SELECT * FROM PRODUTO LIMIT 10;

-- b)	Uma consulta onde mostre os produtos apenas com embalagens ativas.
SELECT DISTINCT P.DESCR, E.ATIVO FROM PRODUTO P, EMBALAGEM E WHERE P.IDPRODUTO = E.IDPRODUTO AND E.ATIVO = "S";

-- c)	Uma consulta que traga quantidade de embalagens de cada produto.
SELECT P.DESCR, COUNT(*) as `QUANTIDADE DE EMBALAGEM` FROM PRODUTO P, EMBALAGEM E WHERE P.IDPRODUTO = E.IDPRODUTO GROUP BY E.IDPRODUTO;

-- d)	Insira um novo produto e uma nova embalagem para esse produto de acordo com a estrutura dados.
INSERT INTO PRODUTO (IDPRODUTO, CODIGOINTERNO, DESCR, ATIVO) VALUES (436, "000006", "CERVEJA COLORADO CAUIM", "S");

INSERT INTO EMBALAGEM (IDPRODUTO, BARRA, DESCR, FATORCONVERSAO, ALTURA, LARGURA, COMPRIMENTO, ATIVO) 
VALUES (436, "7295000819032", "CERVEJA COLORADO CAUIM CX COM 12", 12, 350, 450, 450, "S");
-- Test
SELECT * FROM PRODUTO;
SELECT * FROM EMBALAGEM;

-- e)	Altere a altura para 250, largura para 120 e comprimento para 150 das embalagens dos produtos cujo FATORCONVERSAO seja igual a 1.
UPDATE EMBALAGEM SET ALTURA = 250, LARGURA = 120, COMPRIMENTO = 150 WHERE FATORCONVERSAO = 1;
-- Test
SELECT * FROM EMBALAGEM WHERE FATORCONVERSAO = 1;